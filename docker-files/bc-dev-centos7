###############################################################################
# Dockerfile used to make gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-centos7:20230706_add_deps_for_av1
###############################################################################

# IMPORTANT: Build this image with "--ulimit nofile=1024000:1024000" option.
# There is a bug making docker buildx extremely slow on centos7.
# Source: https://github.com/docker/buildx/issues/379

FROM centos:7

MAINTAINER Peio Rigaux <peio.rigaux@belledonne-communications.com>

#ENV RPM_BUILD_NCPUS=5
ENV SHELL=/bin/bash

# Install plugin to accelerate the image build process
RUN yum -y install yum-plugin-fastestmirror

# Configure additional repositories and install common general tools
RUN yum -y update  ca-certificates && \
    yum install -y epel-release && \
   # rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro && rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm && \
    yum install -y nano sudo which && \
    yum clean all

# Install CMake from the tar.gz as we need a newer version than the one being packaged
ENV CMAKE3_HOME /opt/cmake3
RUN mkdir $CMAKE3_HOME && \
    curl --fail --silent --show-error \
         --location https://cmake.org/files/v3.22/cmake-3.22.6-linux-x86_64.tar.gz | \
    tar --extract --gzip --no-same-owner --file - --strip-components=1 --directory $CMAKE3_HOME

# Install development tools
RUN yum install -y at bison ccache clang doxygen gcc-c++ gdb gettext-devel git graphviz libtool make meson nasm ninja-build patch perl redhat-lsb-core rpm-build yasm && \
    yum clean all

# Install Developer Toolset 8 (for a newer gcc) and LLVM Toolset 7 (for newer clang)
RUN yum install -y centos-release-scl && \
    yum-config-manager --enable rhel-server-rhscl-7-rpms && \
    yum install -y devtoolset-8 llvm-toolset-7

# Install linphone & flexisip dependencies development packages
RUN yum install -y alsa-lib-devel ffmpeg-devel glew-devel gsm-devel jansson-devel libbsd-devel libsrtp-devel libv4l-devel libvpx-devel libXv-devel libxml2-devel mariadb-devel mbedtls-devel mesa-libEGL-devel net-snmp-devel openssh openssh-clients opus-devel postgresql-devel protobuf-devel pulseaudio-libs-devel speex-devel sqlite-devel xerces-c-devel xsd && \
    yum clean all

# Install linphone runtime dependencies
RUN yum install -y mesa-dri-drivers && \
    yum clean all && \
    dbus-uuidgen > /var/lib/dbus/machine-id

# Install openssl from source because we need a newer version than the one available in the package
RUN curl --fail --silent --show-error --location https://www.openssl.org/source/openssl-1.1.1t.tar.gz | \
    tar --extract --gzip --file - && ls -l && \
    cd openssl-1.1* && \
    ./config --prefix=/usr/local --openssldir=/etc/ssl && \
    make && make install && \
    cd .. && rm -rf openssl-1.1*

# Install nasm from source as we need a newer version than the one being packaged
RUN curl --fail --silent --show-error --location https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/nasm-2.16.01.tar.gz | \
    tar --extract --gzip --file - && cd nasm-2.16.01 && \
    ./configure --prefix=/usr/local && make && make install && \
    cd .. && rm -rf nasm-2.16.01

# Configure user bc
RUN useradd -ms /bin/bash bc && \
    echo 'bc:cotcot' | chpasswd && \
    echo 'bc ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Load devtoolset-8 environment on starting
RUN echo 'source /opt/rh/devtoolset-8/enable' >> /home/bc/.bashrc
RUN echo 'source /opt/rh/devtoolset-8/enable' >> /home/bc/.shrc

# This tells /bin/sh to load '~/.shrc' on starting
ENV ENV=~/.shrc

ENV PATH=$PATH:$CMAKE3_HOME/bin/:/opt/com.belledonne-communications/linphone/bin

# Switch for 'bc' user
USER bc
WORKDIR /home/bc

# Install python3 module.
# This must be done as 'bc' user because some python modules are installed into /usr/local/lib when pip is invoked
# as root, and rpmbuild prevent python from seaching its modules in this prefix. Using 'bc' user make the python
# modules to be installed into /home/bc/.local/lib.
RUN sudo yum install -y python3 python3-pip && sudo yum clean all && \
    python3 -m pip install --user six pystache graphviz jsonschema jinja2

ENV PS1='\[\e[34m\]\u@bc-dev-centos7>\[\e[0m\] '
CMD bash
