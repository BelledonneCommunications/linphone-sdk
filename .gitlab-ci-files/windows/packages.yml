vs2017-nuget-windows-package:
  stage: package
  tags: [ "windows-powershell" ]
  needs:
    - vs2017-win32store-scheduled-windows
    - vs2017-uwp-scheduled-windows
    - vs2017-win32-scheduled-windows
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_RUN_WINDOWS != null
    - if: $CI_PIPELINE_SOURCE == "schedule" && $WINDOWS_PACKAGE != null
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - .gitlab-ci-files/windows/packages.yml
        - cmake/NuGet/Windows/**/*
    - if: $DEPLOY_RUN_NUGET != null
  script:
    - Set-Variable -Name "PATH_TEMP" -Value ($(Get-ChildItem -Path Env:\PATH).value)
    - echo $env:Path
    # Remove MinGW of MSYS from PATH and add MINGW_TYPE for MSYS2
    # We double the "\" to escape paths as -replace uses regular expressions
    - $PATH_TEMP = $PATH_TEMP -replace "C:\\MinGW\\bin;" -replace "C:\\Strawberry\\c\\bin;" -replace "C:\\Program Files\\NASM"
    - echo $PATH_TEMP
    - $env:Path = ($PATH_TEMP + ";C:\msys64\mingw64\bin;C:\msys64;C:\msys64\usr\bin;C:\msys64\mingw32\bin")

    - If ($MINGW_TYPE -eq "mingw64") {Import-BatchEnvironment "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"} Else {Import-BatchEnvironment "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"}

    - echo $env:Path

    - cd build

    # We are forced to do it in brackets because powershell displays an human readable object with useless line returns by default...
    - (Get-Location).path > chdir_sdk.temp
    - Set-Variable -Name "OUTPUT_SDK_BUILD" -Value ($(Get-Content chdir_sdk.temp))
    - Write-Output $OUTPUT_SDK_BUILD
    - Write-Output $DEFAULT_CMAKE_OPTIONS
    - Write-Output $CMAKE_OPTIONS
    - Write-Output $CMAKE_ARCHITECTURE
    - Write-Output $SCHEDULE_CMAKE_OPTIONS

    - echo $LastExitCode

    # We use Invoke-Expression to explain to powershell that we don't want it to touch to spaces in arguments
    - Invoke-Expression "& cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLINPHONESDK_BUILD_TYPE=Packager -DLINPHONESDK_PACKAGER=Nuget -DLINPHONESDK_DESKTOP_ZIP_PATH=$OUTPUT_SDK_BUILD/win -DLINPHONESDK_UWP_ZIP_PATH=$OUTPUT_SDK_BUILD/uwp -DLINPHONESDK_WINDOWSSTORE_ZIP_PATH=$OUTPUT_SDK_BUILD/winstore -DLINPHONESDK_WINDOWS_ARCHS=x86 -DLINPHONESDK_WINDOWSSTORE_ARCHS=x86 $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS $CMAKE_ARCHITECTURE $SCHEDULE_CMAKE_OPTIONS"

    - echo $LastExitCode
    - 'if (-not ($LastExitCode -eq 0)) {throw "Error: Configure failed"}'

    - cmake --build . --target ALL_BUILD --config RelWithDebInfo -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false

    - echo $LastExitCode
    - 'if (-not ($LastExitCode -eq 0)) {throw "Error: Build failed"}'
  artifacts:
    paths:
      - build/linphone-sdk/packages/*
    when: always
    expire_in: 1 week
