.windows-vs2017:
  extends: .job-prepare
  stage: build
  tags: [ "windows-powershell" ]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $DOCKER_UPDATE == null && $SKIP_WINDOWS == null
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DOCKER_UPDATE == null && $SKIP_WINDOWS == null
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON -DENABLE_LDAP=ON
    LINPHONESDK_PLATFORM: Desktop
    OUTPUT_ZIP_FOLDER: win32
    MINGW_TYPE: mingw32
    CMAKE_GENERATOR: "Visual Studio 15 2017"
  script:
    - Set-Variable -Name "PATH_TEMP" -Value ($(Get-ChildItem -Path Env:\PATH).value)
    - echo $env:Path
    #Remove MinGW of MSYS from PATH and add MINGW_TYPE for MSYS2
    # We double the "\" to escape paths as -replace uses regular expressions
    - $PATH_TEMP = $PATH_TEMP -replace "C:\\MinGW\\bin;" -replace "C:\\Strawberry\\c\\bin;" -replace "C:\\Program Files\\NASM"
    - echo $PATH_TEMP
    - $env:Path = ($PATH_TEMP + ";C:\msys64\mingw64\bin;C:\msys64;C:\msys64\usr\bin;C:\msys64\mingw32\bin")

    - If ($MINGW_TYPE -eq "mingw64") {Import-BatchEnvironment "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"} Else {Import-BatchEnvironment "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"}

    - echo $env:Path

    - If ( Test-Path -Path "build-desktop" ) {Remove-Item -recurse -force -path "build-desktop" }

    - mkdir build-desktop
    - cd build-desktop
    #we launch the msvc-cl wrapper located in python scripts folder
    #this wrapper relays only needed calls to the real compiler
    #cache stats display
    - C:\PROGRA~1\Python37\Scripts\cl -s
    - Write-Output $CMAKE_ARCHITECTURE
    - Write-Output $SCHEDULE_CMAKE_OPTIONS
    - Write-Output $MAKEFILE_JOBS
    - Write-Output $CMAKE_C_COMPILER
    - Write-Output $CMAKE_CXX_COMPILER
    - Write-Output $CMAKE_RC_COMPILER
    - Write-Output $DEFAULT_CMAKE_OPTIONS
    - Write-Output $CMAKE_OPTIONS
    - Write-Output $CMAKE_ARCHITECTURE
    - Write-Output $SCHEDULE_CMAKE_OPTIONS
    - Write-Output $CMAKE_GENERATOR
    - Write-Output $LINPHONESDK_PLATFORM
    - Write-Output $MINGW_TYPE
    - Write-Output $CLI_OUTPUT_INFO_NINJA
    - Write-Output $Write-Output
    - Write-Output $NINJA_BUILD_PARALLEL_LEVEL
    - Write-Output $PARALLEL_OPTIONS
    - Write-Output $NINJA_OPTIMIZATION
    - Write-Output $NINJA_EXPLICIT_COMPILER_SET
    - Write-Output $DISPLAY_NINJA_LOG
    - Write-Output $SEARCH_NINJA_ERROR
    - Write-Output $DISPLAY_SEARCH_STATUS
    - Write-Output $SET_EXIT_CODE_BASED_ON_SEARCH_STATUS
    - Write-Output $SHOW_SEARCH_STATUS_SCRIPT
    - Write-Output $LAUNCH_SEARCH_STATUS_SCRIPT




    #We are forced to use Invoke-Expression to explain to powershell that we don't want it to touch to spaces in arguments
    #If we don't use it, '-A Win32' will be interpreted as "-A ' Win32'" thus making the build fail

    - echo $LastExitCode

    - Invoke-Expression "& cmake .. -G '$CMAKE_GENERATOR' -DLINPHONESDK_PLATFORM=$LINPHONESDK_PLATFORM -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=RelWithDebInfo $NINJA_BUILD_PARALLEL_LEVEL $NINJA_EXPLICIT_COMPILER_SET $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS $CMAKE_ARCHITECTURE $SCHEDULE_CMAKE_OPTIONS"

    - echo $LastExitCode

    - 'if (-not ($LastExitCode -eq 0)) {throw "Error: Configure failed"}'

    - $CLI_OUTPUT_INFO_NINJA

    #Warning : Ninja doesn't return an error code on Linker error.
    #Store outputs in a file log

    #Only in powershell 7 (Gitlab 14+)
    # - cmake --build . --target sdk --config RelWithDebInfo --parallel $MAKEFILE_JOBS | Select-String -NotMatch -Raw -Pattern "inclusion du fichier"
    - Write-Output $PARALLEL_OPTIONS
    - Write-Output $NINJA_OPTIMIZATION

    # /!\ By design, we must keep $NINJA_OPTIMIZATION as the last option of the line, because it contains an output redirect

    - echo $LastExitCode

    - Invoke-Expression "cmake --build . --target $BUILD_TARGET --config RelWithDebInfo $PARALLEL_OPTIONS  $NINJA_OPTIMIZATION"

    - if ($EXITS_ON_ERROR_MSVC) { Invoke-Expression "$EXITS_ON_ERROR_MSVC" } else { Write-Output "EXITS_ON_ERROR_MSVC is null" }

    - if ($DISPLAY_NINJA_LOG) { Invoke-Expression "$DISPLAY_NINJA_LOG" } else { Write-Output "DISPLAY_NINJA_LOG is null" }

    - if ($SEARCH_NINJA_ERROR) { Invoke-Expression "$SEARCH_NINJA_ERROR" } else { Write-Output "SEARCH_NINJA_ERROR is null" }

    - if ($DISPLAY_SEARCH_STATUS) { Invoke-Expression "$DISPLAY_SEARCH_STATUS" } else { Write-Output "DISPLAY_SEARCH_STATUS is null" }

    - if ($SET_EXIT_CODE_BASED_ON_SEARCH_STATUS) { Invoke-Expression "$SET_EXIT_CODE_BASED_ON_SEARCH_STATUS" } else { Write-Output "SET_EXIT_CODE_BASED_ON_SEARCH_STATUS is null" }

    - if ($SHOW_SEARCH_STATUS_SCRIPT) { Invoke-Expression "$SHOW_SEARCH_STATUS_SCRIPT" } else { Write-Output "SHOW_SEARCH_STATUS_SCRIPT is null" }

    - if ($LAUNCH_SEARCH_STATUS_SCRIPT) { Invoke-Expression "$LAUNCH_SEARCH_STATUS_SCRIPT" -ErrorAction stop } else { Write-Output "LAUNCH_SEARCH_STATUS_SCRIPT is null" }

    - C:\PROGRA~1\Python37\Scripts\cl -s
    - cd linphone-sdk
    - mkdir $OUTPUT_ZIP_FOLDER
    - Copy-Item -Path "*.zip" -Destination "$CI_PROJECT_DIR/build-desktop/linphone-sdk/$OUTPUT_ZIP_FOLDER" -Recurse

################
  artifacts:
    paths:
      - build-desktop\ninja_buildlog.txt
      - build-desktop\linphone-sdk\*
      - build-desktop\ninja_buildlog.txt
      - build-desktop\invertSearch.ps1
    when: always
    expire_in: 1 week

.windows-vs2017-ninja:
  extends: .windows-vs2017
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $DOCKER_UPDATE == null && $SKIP_WINDOWS == null && $DEPLOY_RUN_WINDOWS == null
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DOCKER_UPDATE == null && $SKIP_WINDOWS == null && $DEPLOY_RUN_WINDOWS == null
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON -DENABLE_LDAP=ON
    MINGW_TYPE: mingw32
    LINPHONESDK_PLATFORM: Desktop
    CMAKE_GENERATOR: Ninja
    CLI_OUTPUT_INFO_NINJA: Write-Output -NoEnumerate "Building with Ninja. See ninja_buildlog.txt to get details before completing the build."
    BUILD_TARGET: sdk
    NINJA_BUILD_PARALLEL_LEVEL: -DCMAKE_BUILD_PARALLEL_LEVEL=$MAKEFILE_JOBS
    PARALLEL_OPTIONS: "--parallel $MAKEFILE_JOBS"
    NINJA_OPTIMIZATION: "| find /V \"inclusion du fichier\" > ninja_buildlog.txt; cmd /c \"exit /b 0\""
    NINJA_EXPLICIT_COMPILER_SET: -DCMAKE_C_COMPILER="$CMAKE_C_COMPILER" -DCMAKE_CXX_COMPILER="$CMAKE_CXX_COMPILER" -DCMAKE_RC_COMPILER="$CMAKE_RC_COMPILER"
    DISPLAY_NINJA_LOG: Get-Content ninja_buildlog.txt
    SEARCH_NINJA_ERROR: 'Write-Output "`$$isFound = (Select-String -Pattern `"build stopped: subcommand failed`" -SimpleMatch -Quiet -Path ninja_buildlog.txt)" > invertSearch.ps1'
    DISPLAY_SEARCH_STATUS: Write-Output 'echo $$isFound' >> invertSearch.ps1
    SET_EXIT_CODE_BASED_ON_SEARCH_STATUS: Write-Output -NoEnumerate "If (`$(echo `$$isFound) -eq `"True`") {throw `"There was an error in the build`"} else {exit 0}" >> invertSearch.ps1
    SHOW_SEARCH_STATUS_SCRIPT: Get-Content invertSearch.ps1
    LAUNCH_SEARCH_STATUS_SCRIPT: .\invertSearch.ps1

.windows-vs2017-msvc:
  extends: .windows-vs2017
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON -DENABLE_LDAP=ON
    LINPHONESDK_PLATFORM: Desktop
    OUTPUT_ZIP_FOLDER: win32
    MINGW_TYPE: mingw32
    CMAKE_GENERATOR: "Visual Studio 15 2017"
    BUILD_TARGET: ALL_BUILD
    PARALLEL_OPTIONS: "-- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false"
    EXITS_ON_ERROR_MSVC: 'if (-not ($$LastExitCode -eq 0)) {throw "Error: Build failed"}'

.windows-vs2017-scheduled:
  extends: .windows-vs2017-msvc

  rules:
    - if: $NIGHTLY_MASTER
    - if: $NIGHTLY_RELEASE
    - if: $ENABLE_WINDOWS_TESTS

  before_script:
    #cache disabled on scheduled builds since we dot not need the fastest build
    - Set-Variable -Name "CLCACHE_DISABLE" -Value 1

######################################################
# JOBS
######################################################

vs2017-ninja-win64-windows:
  extends: .windows-vs2017-ninja
  variables:
    CMAKE_C_COMPILER : cl.exe
    CMAKE_CXX_COMPILER : cl.exe
    CMAKE_RC_COMPILER : rc.exe
    MINGW_TYPE: mingw64
    OUTPUT_ZIP_FOLDER: win64

vs2017-ninja-win64-windows-pqc:
  extends: vs2017-ninja-win64-windows
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON -DENABLE_LDAP=ON -DENABLE_PQCRYPTO=ON

vs2017-ninja-win32-windows:
  extends: .windows-vs2017-ninja
  rules:
    - if: $ENABLE_WINDOWS_TESTS_WIN32_NINJA
  variables:
    CMAKE_C_COMPILER : cl.exe
    CMAKE_CXX_COMPILER : cl.exe
    CMAKE_RC_COMPILER : rc.exe

######################################################
# NIGHTLY
######################################################

##      ON SCHEDULE     ##
vs2017-uwp-scheduled-windows:
  extends: .windows-vs2017-scheduled
  rules:
    - if: $NIGHTLY_MASTER
    - if: $NIGHTLY_RELEASE
    - if: $DEPLOY_RUN_WINDOWS
    - &nuget_deploy_rule
      if: $DEPLOY_RUN_NUGET
    - if: $ENABLE_WINDOWS_UWP_TESTS
    - if: $ENABLE_WINDOWS_TESTS
    - &nuget_dev_rule
      if:  $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - .gitlab-ci-files/job-windows.yml
        - .gitlab-ci-files/job-packages.yml
        - cmake/NuGet/Windows/**/*
  variables:
    LINPHONESDK_PLATFORM: UWP
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=YES -DENABLE_OPENH264=YES -DENABLE_NON_FREE_CODECS=YES -DENABLE_LDAP=NO 
    OUTPUT_ZIP_FOLDER: uwp
    MINGW_TYPE: mingw64
    CMAKE_GENERATOR: "Visual Studio 15 2017"

vs2017-uwp-scheduled-windows-pqc:
  extends: vs2017-uwp-scheduled-windows
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=YES -DENABLE_LDAP=NO -DENABLE_PQCRYPTO=YES

vs2017-win32-scheduled-windows:
  extends: .windows-vs2017-scheduled
  rules:
    - if: $NIGHTLY_MASTER
    - if: $NIGHTLY_RELEASE
    - if: $UPLOAD_CS_DOC
    - if: $DEPLOY_RUN_WINDOWS
    - *nuget_deploy_rule
    - *nuget_dev_rule
  variables:
    CMAKE_ARCHITECTURE : -A Win32
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=YES -DENABLE_FFMPEG=YES -DENABLE_OPENH264=YES -DENABLE_NON_FREE_CODECS=YES -DENABLE_LDAP=NO -DENABLE_DOC=YES
    OUTPUT_ZIP_FOLDER: win32
    GIT_FETCH_EXTRA_FLAGS: --tags --force --recurse-submodules=yes
    GIT_SUBMODULE_UPDATE_FLAGS: --jobs 8 --force --recursive

vs2017-win32-scheduled-windows-pqc:
  extends: vs2017-win32-scheduled-windows
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=YES -DENABLE_FFMPEG=YES -DENABLE_OPENH264=YES -DENABLE_NON_FREE_CODECS=YES -DENABLE_LDAP=NO -DENABLE_DOC=YES -DENABLE_PQCRYPTO=YES

vs2017-win32store-scheduled-windows:
  extends: .windows-vs2017-scheduled
  rules:
    - if: $NIGHTLY_MASTER
    - if: $NIGHTLY_RELEASE
    - if: $DEPLOY_RUN_WINDOWS
    - *nuget_deploy_rule
    - *nuget_dev_rule
  variables:
    CMAKE_OPTIONS: -DCMAKE_TOOLCHAIN_FILE=../cmake-builder/toolchains/toolchain-windows-store.cmake  -DENABLE_UNIT_TESTS=YES -DENABLE_FFMPEG=YES -DENABLE_OPENH264=YES -DENABLE_NON_FREE_CODECS=YES -DENABLE_LDAP=NO
    OUTPUT_ZIP_FOLDER: win32store

win32-vs2017-novideo-windows:
  extends: vs2017-win32-scheduled-windows
  rules:
    - if: $NIGHTLY_MASTER
    - if: $NIGHTLY_RELEASE
    - if: $DEPLOY_RUN_WINDOWS

  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
