#Build template to use in other job scripts without having to copy same code
#format = .className: &referenceName
#Use = "<< *referenceName" to use the template ("-*" in script)


.factorize_arch: &docker_image_platform_and_runner_tag
  tags: [ "docker-test" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux:$ARCHLINUX_IMAGE_VERSION
  variables:
    PLATFORM: linux-arch

#################################################
# Makefile
#################################################


arch-latest-makefile-gcc:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux:$ARCHLINUX_IMAGE_VERSION
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: gcc
    CXX: g++
  extends: .linux-desktop


arch-latest-makefile-clang:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux:$ARCHLINUX_IMAGE_VERSION
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: clang
    CXX: clang++
  extends: .linux-desktop


#################################################
# Ninja
#################################################


arch-latest-ninja-gcc:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux:$ARCHLINUX_IMAGE_VERSION
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Ninja
    CC: gcc
    CXX: g++
  extends: .linux-desktop


arch-latest-ninja-gcc-novideo:

  tags: [ "docker" ]
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
  extends: arch-latest-ninja-gcc


arch-latest-ninja-clang:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux:$ARCHLINUX_IMAGE_VERSION
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $DOCKER_UPDATE == null && $SKIP_LINUX == null
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DOCKER_UPDATE == null && $SKIP_LINUX == null
  variables:
    CMAKE_GENERATOR: Ninja
    CC: clang
    CXX: clang++
  extends: .linux-desktop


arch-latest-ninja-clang-novideo:
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
  extends: arch-latest-ninja-clang

arch-latest-ninja-clang-pqc:
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_PQCRYPTO=YES
  extends: arch-latest-ninja-clang


#################################################
# TESTS
#################################################


bctoolbox-arch-test:
  extends: .test-bctoolbox
  needs:
    - arch-latest-ninja-clang
  <<: *docker_image_platform_and_runner_tag

pqc-arch-test:
  extends: .test-pqc
  needs:
    - arch-latest-ninja-clang-pqc
  <<: *docker_image_platform_and_runner_tag

bellesip-arch-test:
  extends: .test-bellesip
  needs:
    - arch-latest-ninja-clang
  #different runner needed because belle-sip_tester can't work in parallel (dialog test suite is crashing randomly)
  tags: [ "docker-sequential" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux:$ARCHLINUX_IMAGE_VERSION
  variables:
    PLATFORM: linux-arch

belr-arch-test:
  extends: .test-belr
  needs:
    - arch-latest-ninja-clang
  <<: *docker_image_platform_and_runner_tag

belcard-arch-test:
  extends: .test-belcard
  needs:
    - arch-latest-ninja-clang
  <<: *docker_image_platform_and_runner_tag

bzrtp-arch-test:
  extends: .test-bzrtp
  needs:
    - arch-latest-ninja-clang
  <<: *docker_image_platform_and_runner_tag

liblinphone-arch-test:
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-archlinux-test-liblinphone:$ARCHLINUX_TEST_LIBLIN_IMAGE_VERSION
  extends: .test-liblinphone
  needs:
    - arch-latest-ninja-clang
  variables:
    PLATFORM: linux-arch
