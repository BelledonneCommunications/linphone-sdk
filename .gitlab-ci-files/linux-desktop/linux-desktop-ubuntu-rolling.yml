#Build template to use in other job scripts without having to copy same code
#format = .className: &referenceName
#Use = "<< *referenceName" to use the template ("-*" in script)


.factorize_ubuntu-rolling: &docker_image_platform_and_runner_tag
  tags: [ "docker-test" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling:$UBUNTU_ROLLING_IMAGE_VERSION
  variables:
    PLATFORM: linux-ubuntu-rolling

#################################################
# Makefile
#################################################


ubuntu-rolling-makefile-gcc:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling:$UBUNTU_ROLLING_IMAGE_VERSION
  rules:
    - if: $NIGHTLY_MASTER
    - if: $DOCKER_UPDATE
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: gcc
    CXX: g++
    #Only used to overwrite value set by .set_parallel_level.yml
    #ADDITIONAL_BUILD_OPTIONS: -j[jobs]
  extends: .linux-desktop


#ubuntu-rolling-makefile-clang:

#  tags: [ "docker" ]
#  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling:$UBUNTU_ROLLING_IMAGE_VERSION
# rules:
#   - if: $NIGHTLY_MASTER
#  variables:
#    CMAKE_GENERATOR: Unix Makefiles
#    CC: clang
#    CXX: clang++
#    #Only used to overwrite value set by .set_parallel_level.yml
#    #ADDITIONAL_BUILD_OPTIONS: -j[jobs]
#  extends: .linux-desktop


#################################################
# Ninja
#################################################


#ubuntu-rolling-ninja-gcc:

#  tags: [ "docker" ]
#  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling:$UBUNTU_ROLLING_IMAGE_VERSION
# rules:
#   - if: $NIGHTLY_MASTER
#  variables:
#    CMAKE_GENERATOR: Ninja
#    CC: gcc
#    CXX: g++
#  extends: .linux-desktop


#ubuntu-rolling-ninja-gcc-novideo:
# rules:
#   - if: $NIGHTLY_MASTER
#  variables:
#    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
#  extends: ubuntu-rolling-ninja-gcc


ubuntu-rolling-ninja-clang:
  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling:$UBUNTU_ROLLING_IMAGE_VERSION
  variables:
    CMAKE_GENERATOR: Ninja
    CC: clang
    CXX: clang++
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SKIP_LINUX == null
  extends: .linux-desktop

ubuntu-rolling-ninja-clang-pqc:
  rules:
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_PQCRYPTO=YES
  extends: ubuntu-rolling-ninja-clang

#ubuntu-rolling-ninja-clang-novideo:

# rules:
#   - if: $NIGHTLY_MASTER
#  variables:
#    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
#  extends: ubuntu-rolling-ninja-clang

#################################################
# TESTS
#################################################


bctoolbox-ubuntu-test:
  extends: .test-bctoolbox
  needs:
    - ubuntu-rolling-ninja-clang
  <<: *docker_image_platform_and_runner_tag

pqc-ubuntu-test:
  extends: .test-pqc
  <<: *docker_image_platform_and_runner_tag
  needs:
    - ubuntu-rolling-ninja-clang-pqc

bellesip-ubuntu-test:
  extends: .test-bellesip
  needs:
    - ubuntu-rolling-ninja-clang
  tags: [ "docker-test-ubuntu-rolling-nuc" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling:$UBUNTU_ROLLING_IMAGE_VERSION
  variables:
    PLATFORM: linux-ubuntu-rolling

belr-ubuntu-test:
  extends: .test-belr
  needs:
    - ubuntu-rolling-ninja-clang
  <<: *docker_image_platform_and_runner_tag

belcard-ubuntu-test:
  extends: .test-belcard
  needs:
    - ubuntu-rolling-ninja-clang
  <<: *docker_image_platform_and_runner_tag

bzrtp-ubuntu-test:
  extends: .test-bzrtp
  needs:
    - ubuntu-rolling-ninja-clang
  <<: *docker_image_platform_and_runner_tag

liblinphone-ubuntu-test:
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-ubuntu-rolling-test-liblinphone:$UBUNTU_ROLLING_TEST_LIBLIN_IMAGE_VERSION
  extends: .test-liblinphone
  needs:
    - ubuntu-rolling-ninja-clang
  variables:
    PLATFORM: linux-ubuntu-rolling
