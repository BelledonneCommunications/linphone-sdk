#Build template to use in other job scripts without having to copy same code
#format = .className: &referenceName
#Use = "<< *referenceName" to use the template ("-*" in script)


.factorize_debian10: &docker_image_platform_and_runner_tag
  tags: [ "docker-test" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10:$DEBIAN_10_IMAGE_VERSION
  variables:
    PLATFORM: linux-debian10

#################################################
# Makefile
#################################################


debian10-makefile-gcc:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10:$DEBIAN_10_IMAGE_VERSION
  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: gcc
    CXX: g++
    #Only used to overwrite value set by .set_parallel_level.yml
    #ADDITIONAL_BUILD_OPTIONS: -j[jobs]
  extends: .linux-desktop


debian10-makefile-clang:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10:$DEBIAN_10_IMAGE_VERSION
  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    CC: clang
    CXX: clang++
    #Only used to overwrite value set by .set_parallel_level.yml
    #ADDITIONAL_BUILD_OPTIONS: -j[jobs]
  extends: .linux-desktop


#################################################
# Ninja
#################################################


debian10-ninja-gcc:

  tags: [ "docker" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10:$DEBIAN_10_IMAGE_VERSION
  variables:
    CMAKE_GENERATOR: Ninja
    CC: gcc
    CXX: g++
    CMAKE_OPTIONS: -DENABLE_CXX_WRAPPER=ON -DENABLE_LDAP=OFF -DENABLE_DOC=ON
  extends: .linux-desktop


debian10-ninja-gcc-novideo:

  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=OFF -DENABLE_LDAP=OFF
  extends: debian10-ninja-gcc


debian10-ninja-gcc-smallsdk:

  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER

  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=OFF -DENABLE_ADVANCED_IM=OFF -DENABLE_DB_STORAGE=OFF -DENABLE_FLEXIAPI=OFF -DENABLE_LDAP=OFF
  extends: debian10-ninja-gcc

debian10-ninja-gcc-pqc:
  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER

  variables:
    CMAKE_OPTIONS: -DENABLE_NON_FREE_FEATURES=ON -DENABLE_PQCRYPTO=ON -DENABLE_LDAP=OFF
  extends: debian10-ninja-gcc



debian10-ninja-clang:

  tags: [ "docker" ]
  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10:$DEBIAN_10_IMAGE_VERSION
  variables:
    CMAKE_GENERATOR: Ninja
    CC: clang
    CXX: clang++
    CMAKE_OPTIONS: -DENABLE_LDAP=OFF
  extends: .linux-desktop

debian10-ninja-clang-sanitizer:
  variables:
    #We use debug build type here to workaround an issue where sanitizer in ReleaseDebugInfo is taking more than one hour to complete
    CMAKE_SANITIZER_OPTIONS: -DENABLE_SANITIZER=ON -DCMAKE_BUILD_TYPE=Debug
    #Until we fix belle-sip/belr parser taking at build time as much ram as a AAA game
    #If we dont limit this, this job is getting killed by kernel oom_killer
    ADDITIONAL_BUILD_OPTIONS: "-j 4"
  extends: debian10-ninja-clang

debian10-ninja-clang-novideo:
  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=OFF -DENABLE_LDAP=OFF
  extends: debian10-ninja-clang

debian10-ninja-clang-pqc:
  rules:
    - !reference [.rules-merge-request-manual, rules]
    - if: $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_NON_FREE_FEATURES=ON -DENABLE_PQCRYPTO=ON -DENABLE_LDAP=OFF
  extends: debian10-ninja-clang

#################################################
# TESTS
#################################################



bctoolbox-debian10-test:
  extends: .test-bctoolbox
  needs:
    - debian10-ninja-gcc
  <<: *docker_image_platform_and_runner_tag

pqc-debian10-test:
  extends: .test-pqc
  <<: *docker_image_platform_and_runner_tag
  needs:
    - debian10-ninja-gcc-pqc

bellesip-debian10-test:
  extends: .test-bellesip
  needs:
    - debian10-ninja-gcc
  #different runner needed because belle-sip_tester can't work in parallel (dialog test suite is crashing randomly)
  tags: [ "docker-sequential" ]
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10:$DEBIAN_10_IMAGE_VERSION
  variables:
    PLATFORM: linux-debian10

belr-debian10-test:
  extends: .test-belr
  needs:
    - debian10-ninja-gcc
  <<: *docker_image_platform_and_runner_tag

belcard-debian10-test:
  extends: .test-belcard
  needs:
    - debian10-ninja-gcc
  <<: *docker_image_platform_and_runner_tag

bzrtp-debian10-test:
  extends: .test-bzrtp
  needs:
    - debian10-ninja-gcc
  <<: *docker_image_platform_and_runner_tag

ortp-debian10-test:
  extends: .test-ortp
  needs:
    - debian10-ninja-gcc
  <<: *docker_image_platform_and_runner_tag

liblinphone-debian10-test:
  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-debian10-test-liblinphone:$DEBIAN_10_TEST_LIBLIN_IMAGE_VERSION
  extends: .test-liblinphone
  needs:
    - debian10-ninja-gcc
  variables:
    PLATFORM: linux-debian10
