.job-macosx-desktop:

  extends: .job-prepare
  stage: build
  tags: [ "macosx" ]

  script:
    - ccache -s
    - mkdir -p build-desktop
    - cd build-desktop
    - cmake .. -G "$CMAKE_GENERATOR" -DLINPHONESDK_PLATFORM=Desktop -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS
    - cmake --build . --target sdk -- $ADDITIONAL_BUILD_OPTIONS
    - ccache -s

  artifacts:
    paths:
      - build-desktop/linphone-sdk-*.zip
      - build-desktop/linphone-sdk.podspec
    when: always
    expire_in: 1 week


#################################################
# Makefile
#################################################


job-macosx-makefile:

  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    ADDITIONAL_BUILD_OPTIONS: -j$MAKEFILE_JOBS
  extends: .job-macosx-desktop


#################################################
# Ninja
#################################################


job-macosx-ninja:

  variables:
    CMAKE_GENERATOR: Ninja
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
  extends: .job-macosx-desktop


job-macosx-ninja-novideo:

  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
  extends: job-macosx-ninja


#################################################
# XCode
#################################################


job-macosx-xcode:

  stage: build
  tags: [ "macosx" ]

  only:
    variables:
      - $NIGHTLY_MASTER
      - $DEPLOY_RUN_MACOSX
      
  script:
    - mkdir -p build-desktop
    - cd build-desktop
    - cmake .. -G Xcode -DLINPHONESDK_PLATFORM=Desktop -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DLINPHONESDK_MACOS_BASE_URL=$MACOS_SNAPSHOTS_URL $CMAKE_OPTIONS
    - cmake --build . --target sdk -- -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=`sysctl -n hw.ncpu`

  artifacts:
    paths:
      - build-desktop/linphone-sdk-*.zip
      - build-desktop/linphone-sdk.podspec
    when: always
    expire_in: 1 week
    
test-linphone-macosx:
  stage: test
  extends: .job-prepare
  tags: [ "macosx" ]
  allow_failure: true
  dependencies:
    - job-macosx-ninja
  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    # no need to fetch repo, all is needed in artifacts
    GIT_STRATEGY: none
    LOG_PATTERN: "logLiblinphoneAllParThIpv6"
    PATH_TO_TESTER: "${CI_PROJECT_DIR}/build-desktop/linphone-sdk/desktop/bin"
    ADDITIONNAL_OPTIONS: "--dns-hosts ${CI_PROJECT_DIR}/linphone/tester/tester_hosts --show-account-manager-logs"

  script:
    - unzip ${CI_PROJECT_DIR}/build-desktop/linphone-sdk-*.zip
    - cd $PATH_TO_TESTER
    - ls -la
    - echo ${CI_PROJECT_DIR}
    - echo ${CI_PROJECT_DIR}/linphone/tester/tester_hosts
    # Force core dump generation
    - ulimit -c unlimited
    - ./liblinphone_tester --verbose --parallel $ADDITIONNAL_OPTIONS --log-file $LOG_PATTERN.txt
  
  after_script:
    - pwd
    - cd $PATH_TO_TESTER
    # searching for core files and if there are some, launch lldb on all of it
    # "|| true" is used here to continue the script even if the find fails
    # for all coredumps found in find output (xargs -L1), lldb will be launched, with the commands 'thread backtrace all' and 'quit'
    - if [[ -n $(find . -type f -name "core*") ]]; then find . -type f -name "core*" | xargs -L1 lldb --batch -o 'thread backtrace all' -o 'quit' -c ; fi || true
    - ls -la
    - mkdir ${CI_PROJECT_DIR}/results
    - cp -r BCUnitAutomated* ${CI_PROJECT_DIR}/results
    - cp -r $LOG_PATTERN* ${CI_PROJECT_DIR}/results
    
  artifacts:
    paths:
      - results/*
    when: always
    expire_in: 4 week
