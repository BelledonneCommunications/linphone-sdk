.job-macosx-desktop:

  extends: .job-prepare
  stage: build
  tags: [ "macosx-xcode11" ]

  except:
    variables:
      - $DOCKER_UPDATE
      - $SKIP_MACOSX

  script:
    - echo $MACOS_DEPLOY_URL
    - echo $XCODE_OPTIONS
    - ccache -s
    - if [ -d "build-desktop" ]; then rm -rf build-desktop; fi;
    - mkdir -p build-desktop
    - cd build-desktop
    - echo $CMAKE_GENERATOR
    - echo $DEFAULT_CMAKE_OPTIONS
    - echo $CMAKE_OPTIONS
    - cmake .. -G "$CMAKE_GENERATOR" -DLINPHONESDK_PLATFORM=Desktop -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 $DEFAULT_CMAKE_OPTIONS $XCODE_OPTIONS $CMAKE_OPTIONS $SCHEDULE_CMAKE_OPTIONS
    - cmake --build . --target sdk -- $ADDITIONAL_BUILD_OPTIONS
    #used to know the right zip to pick up in tests stage. we parse the git status command to stop at the number of commits
    #and we then use a glob in test stage to get the right archive
    #using only the git describe doesn't work because the commit hashes don't match
    - ls -t linphone-sdk-*.zip > sdk_archive_name.txt
    - cat sdk_archive_name.txt
    - ccache -s

  artifacts:
    paths:
      - build-desktop/sdk_archive_name.txt
      - build-desktop/linphone-sdk-*.zip
      - build-desktop/linphone-sdk.podspec
      - liblinphone/tester/*
    when: always
    expire_in: 1 week


#################################################
# Makefile
#################################################


job-macosx-makefile:

  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    ADDITIONAL_BUILD_OPTIONS: -j$MAKEFILE_JOBS
  extends: .job-macosx-desktop


#################################################
# Ninja
#################################################


job-macosx-ninja:

  variables:
    CMAKE_GENERATOR: Ninja
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
  extends: .job-macosx-desktop


job-macosx-ninja-novideo:

  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
  extends: job-macosx-ninja


#################################################
# XCode
#################################################


job-macosx-xcode:
  extends: .job-macosx-desktop
  variables:
    CMAKE_GENERATOR: Xcode
    ADDITIONAL_BUILD_OPTIONS: -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=$MAX_NUMBER_TASK

  only:
    variables:
      - $NIGHTLY_MASTER
      - $NIGHTLY_RELEASE
      - $DEPLOY_RUN_MACOSX

  # All variables declared in "variables" are processed before "before_script" and "script", so declaring XCODE_OPTIONS (path to base URL) in before_script allows to set it dynamically.
  before_script:
    - MACOS_DEPLOY_URL=$MACOS_RELEASES_URL
    - |
        if [[ $(git -C liblinphone describe) =~ .*(alpha|beta).* ]];
        then MACOS_DEPLOY_URL=$MACOS_SNAPSHOTS_URL
        fi
    - echo $MACOS_DEPLOY_URL
    - XCODE_OPTIONS="-DLINPHONESDK_MACOS_BASE_URL=$MACOS_DEPLOY_URL"

test-liblinphone-macosx:
  stage: test
  extends: .job-prepare
  tags: [ "macosx-xcode11" ]
  allow_failure: true
  needs:
    - job-macosx-ninja
  only:
    variables:
      - $ENABLE_MACOSX_TESTS
  variables:
    # no need to fetch repo, all is needed in artifacts
    GIT_STRATEGY: none
    LOG_PATTERN: "logLiblinphoneAllParThIpv6"
    PATH_TO_TESTER: "${CI_PROJECT_DIR}/build-desktop/linphone-sdk/desktop/bin"
    ADDITIONNAL_OPTIONS: " --show-account-manager-logs"

  script:
    #Where am I when the zip is extracted ?
    - pwd
    #using -o for overwrite
    - SDK_ARCHIVE_NAME=$(cat ${CI_PROJECT_DIR}/build-desktop/sdk_archive_name.txt)
    - echo ${CI_PROJECT_DIR}/build-desktop/$SDK_ARCHIVE_NAME
    - ls -la ${CI_PROJECT_DIR}/build-desktop/
    - unzip -o ${CI_PROJECT_DIR}/build-desktop/$SDK_ARCHIVE_NAME -d ${CI_PROJECT_DIR}/build-desktop
    - cd $PATH_TO_TESTER
    - ls -la
    - echo ${CI_PROJECT_DIR}
    - echo ${CI_PROJECT_DIR}/liblinphone/tester/tester_hosts
    # Force core dump generation
    - ulimit -c unlimited
    - ./liblinphone_tester --verbose --parallel $ADDITIONNAL_OPTIONS --log-file $LOG_PATTERN.txt

  after_script:
    - pwd
    - cd $PATH_TO_TESTER
    # searching for core files and if there are some, launch lldb on all of it
    # "|| true" is used here to continue the script even if the find fails
    # for all coredumps found in find output (xargs -L1), lldb will be launched, with the commands 'thread backtrace all' and 'quit'
    - if [[ -n $(find . -type f -name "core*") ]]; then find . -type f -name "core*" | xargs -L1 lldb --batch -o 'thread backtrace all' -o 'quit' -c ; fi || true
    - ls -la
    - pwd

    - BRANCH=$CI_COMMIT_REF_NAME
    - echo $BRANCH
    - ESCAPED_BRANCH=$(echo $BRANCH | tr / _)
    - echo $ESCAPED_BRANCH
    - COMMIT=$(git describe)
    - echo $COMMIT
    - URL=https://linphone.org/snapshots/allure-tests-reports/$ESCAPED_BRANCH/$COMMIT-$CI_JOB_ID/macosx/liblinphone/allure-report

    - echo "<\!DOCTYPE HTML>" >> index.html
    - echo "<meta charset=\"UTF-8\">" >> index.html
    - echo "<meta http-equiv=\"refresh\" content=\"1; url=$URL\">" >> index.html
    - echo "<script>" >> index.html
    - echo "  window.location.href = \"$URL\"" >> index.html
    - echo "</script>" >> index.html
    - echo "<title>Page Redirection</title>" >> index.html
    - echo "<\!-- Don't tell people to \`click\` the link, just tell them that it is a link. -->" >> index.html
    - echo "If you are not redirected automatically, follow the <a href='$URL'>link to see the test report</a>" >> index.html
    - cat index.html

    - echo "TEST REPORTS URL $URL"

    - echo "alias URL=https://linphone.org/snapshots/allure-tests-reports/$ESCAPED_BRANCH/$GITLAB_USER_LOGIN/$COMMIT-$CI_JOB_ID/macosx/liblinphone/allure-report"

    #Gathering artifacts in one folder to ease their use
    - if [[ -n $(ls ${CI_PROJECT_DIR} | grep results) ]]; then rm -rf ${CI_PROJECT_DIR}/results/*; else mkdir ${CI_PROJECT_DIR}/results ; fi || true;
    - echo $LOG_PATTERN
    - echo $CI_JOB_ID > ${CI_PROJECT_DIR}/results/tests_id
    - echo $CI_JOB_URL > ${CI_PROJECT_DIR}/results/job_url
    - echo ${CI_PROJECT_DIR}/results
    - ls $LOG_PATTERN*
    - cp BCUnitAutomated* ${CI_PROJECT_DIR}/results
    - cp $LOG_PATTERN* ${CI_PROJECT_DIR}/results
    # cleaning the extracted files
    - rm -rf ${CI_PROJECT_DIR}/build-desktop/
  artifacts:
    paths:
      - results/*
    when: always
    expire_in: 4 week
