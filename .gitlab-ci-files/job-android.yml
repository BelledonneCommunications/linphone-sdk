.job-android:

  stage: build
  tags: [ "docker" ]

  variables:
    CCACHE_SIZE: 4G

  extends: .linux-prepare

  except:
    variables:
      - $DOCKER_UPDATE
      - $SKIP_ANDROID

  script:
    - sdkmanager
    - mkdir -p build
    - cd build
    - echo $CMAKE_GENERATOR
    - echo $ANDROID_ARCHS
    - echo $DEFAULT_LINUX_CMAKE_OPTIONS
    - echo $CMAKE_OPTIONS
    - cmake .. -G "$CMAKE_GENERATOR" -DLINPHONESDK_PLATFORM=Android -DLINPHONESDK_ANDROID_ARCHS="$ANDROID_ARCHS" $DEFAULT_LINUX_CMAKE_OPTIONS $CMAKE_OPTIONS $SCHEDULE_CMAKE_OPTIONS $CMAKE_SANITIZER_OPTIONS
    - cmake --build . --target sdk -- $ADDITIONAL_BUILD_OPTIONS

  artifacts:
    paths:
      - build/linphone-sdk/bin/outputs/aar/*.aar
      - build/linphone-sdk/bin/libs/linphone-sdk-android-javadoc.jar
      - build/linphone-sdk/bin/libs/linphone-sdk-android-sources.jar
      - build/linphone-sdk/bin/distributions/linphone-sdk-*.zip

      #Needed for tester
      - build/libs-debug/*
      - linphone/tester/*

      #Needed of uploads
      - build/upload.gradle
      - build/gradle.properties
      - build/LinphoneSdkManifest.xml
    when: always
    expire_in: 1 week


#################################################
# Makefile
#################################################

job-android-makefile-r17c:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-android:r17c
  variables:
    CMAKE_GENERATOR: Unix Makefiles
    ADDITIONAL_BUILD_OPTIONS: -j$MAKEFILE_JOBS
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
  extends: .job-android

job-android-makefile-r17c-no-java-wrapper:
  only:
    variables:
      - $NIGHTLY_MASTER
      - $DEPLOY_RUN_ANDROID
  variables:
    CMAKE_OPTIONS: -DENABLE_JAVA_WRAPPER=NO
  extends: job-android-makefile-r17c

job-android-makefile-r17c-minimal-size:
  only:
    variables:
      - $NIGHTLY_MASTER
      - $DEPLOY_RUN_ANDROID
  variables:
    ANDROID_ARCHS: $ANDROID_ARCHS_MINIMAL_SIZE
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO -DENABLE_ADVANCED_IM=NO -DENABLE_DB_STORAGE=NO -DENABLE_VCARD=NO -DENABLE_MKV=NO -DENABLE_CAMERA2=NO -DENABLE_ASSETS=NO -DENABLE_LIME_X3DH=NO -DENABLE_QRCODE=NO -DENABLE_JPEG=NO -DENABLE_ZLIB=NO
  extends: job-android-makefile-r17c


#################################################
# Ninja
#################################################

job-android-ninja-r17c-no-video:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-android:r17c
  only:
    variables:
      - $NIGHTLY_MASTER
      - $DEPLOY_RUN_ANDROID
  variables:
    CMAKE_GENERATOR: Ninja
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
  extends: .job-android

#job-android-ninja-r17c-macos:
#  tags: [ "macosx" ]
#  only:
#    variables:
#      - $NIGHTLY_MASTER
#  variables:
#    CMAKE_GENERATOR: Ninja
#    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
#  extends: .job-android

job-android-ninja-r20:

  image: gitlab.linphone.org:4567/bc/public/linphone-sdk/bc-dev-android:r20
  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_GENERATOR: Ninja
  extends: .job-android

job-android-ninja-r20-smallsdk:

  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO -DENABLE_ADVANCED_IM=NO -DENABLE_DB_STORAGE=NO
  extends: job-android-ninja-r20

job-android-ninja-r20-allcodecs:

  only:
    variables:
      - $NIGHTLY_MASTER
  variables:
    CMAKE_OPTIONS: -DENABLE_NON_FREE_CODECS=YES -DENABLE_OPENH264=YES -DENABLE_G729=YES

  extends: job-android-ninja-r20

#job-android-ninja-r20-sanitizer:
#  variables:
#    CMAKE_SANITIZER_OPTIONS: -DENABLE_SANITIZER=YES
#  extends: job-android-ninja-r20

#################################################
# Tests Android
#################################################

test-android-r17c:
  tags: [ "docker-android-test-r17c" ]
  stage: test
  allow_failure: true
  dependencies:
    - job-android-makefile-r17c
  only:
    variables:
      - $NIGHTLY_MASTER
  script:
    - cd ${CI_PROJECT_DIR}/tester/Android
    # uninstalling tester apps on device to prevent conflicts, but running anyway if there isn't some found.
    - adb uninstall org.linphone.tester.test || true
    - adb uninstall org.linphone.tester || true

    # build of the testers
    - ./gradlew assembleDebug
    - ./gradlew assembleDebugAndroidTest

    # gathering full trace of logcat in case of a coredump
    - |
        for x in `adb devices | sed -n '1!p' | sed '/^$/d' | awk '{print $1;}'`; do
        adb -s $x logcat -c
        adb -s $x logcat -v time > $x.txt &
        echo $! > $x.pid
        done

    # Test launching
    - |
        java -jar ~/spoon.jar --output spoon --apk app/build/outputs/apk/debug/app-debug.apk \
        --test-apk app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
        --class-name 'org.linphone.tester.AllTests' \
        --fail-on-failure --fail-if-no-device-connected --grant-all || ( if [ $? -ne 0 ]
        then
        echo "Some tests are failed" && false
        fi)

  after_script:
    #putting all the trace in the ndk stack txt file
    - |
        for x in `adb devices | sed -n '1!p' | sed '/^$/d' | awk '{print $1;}'`; do
        cat tester/Android/$x.txt | ndk-stack -sym build/libs-debug/`adb -s $x shell getprop ro.product.cpu.abi | tr -d '\r'` > tester/Android/$x-ndk-stack.txt
        done
    #debugging output to see why the tests are failing in runner
    - cat tester/Android/$x.txt
    - tar zcvf tester/Android/logs-tests-android.tar.gz tester/Android/spoon/ tester/Android/*.txt

    #Gathering artifacts in one folder to ease their use
    - sudo mkdir ${CI_PROJECT_DIR}/results
    - sudo chmod 777 ${CI_PROJECT_DIR}/results
    - mv tester/Android/logs-tests-android.tar.gz ${CI_PROJECT_DIR}/results
    - mv tester/Android/spoon/junit-reports/*.xml ${CI_PROJECT_DIR}/results

  artifacts:
    paths:
      - results/*

    when: always
    expire_in: 4 week
