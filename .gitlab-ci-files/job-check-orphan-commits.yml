job-check-orphan-commits:

  tags: [ "linux-deploy" ]
  stage: check-orphans
  #prevents jobs from gathering all previous jobs artifacts
  dependencies: []
  script :
    #This script checks if there is referenced orphans commits and errors out if there is any.
    #The main purpose if to keep a clean git tree and to prevent fetch errors by earlier versions of git (1.8.x)
    #For each submodule, we get the referenced commit, and we check if this commit is referenced by a branch.
    #Red color ANSI code : \033[0;31m
    #No color ANSI code : \033[0m
    - |
      git submodule foreach --recursive 'COMMIT=$(git rev-parse HEAD) \
        && BRANCHES_LIST=$(git branch -r --verbose --contains $COMMIT) \
        && if [ -n "$BRANCHES_LIST" ]; then \
             echo "Branches found for commit $COMMIT" \
             $BRANCHES_LIST; \
             EXIT=0; \
           else \
             echo -e "\033[0;31m ERROR : Commit $COMMIT referenced by $path is not on a branch. Maybe the hash was not updated on a merge request after the squash. Please fix this ! Either check if the problem was already fixed by a new commit, or point on the right commit referenced in a branch, instead of the orphan one. \033[0m"; \
             EXIT=1; \
           fi; \
           echo' && \
           exit $EXIT;
