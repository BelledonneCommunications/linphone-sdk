#################################################
# VS2015
#################################################
#Wedo not need vs2015 anymore

#job-windows-vs2015:
#
#  extends: .job-prepare
#  stage: build
#  tags: [ "windows" ]
#  except:
#    refs:
#      - feature/peioMergeCi
#
#  except:
#    variables:
#      - $DEPLOY_RUN_ANDROID
#      - $DEPLOY_RUN_IOS
#  variables:
#    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO
#
#  script:
#    - mkdir build-desktop
#    - cd build-desktop
#    - cmake .. -G "Visual Studio 14 2015" -DLINPHONESDK_PLATFORM=Desktop -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS%
#   - cmake --build . --target sdk --config Release -- /maxcpucount

#job-windows-vs2015-novideo:
#
#  only:
#    - schedules
#  except:
#    variables:
#      - $DEPLOY_RUN_ANDROID
#      - $FAST_LINUX_TESTS
#  variables:
#    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
#  extends: job-windows-vs2015
.job-windows-vs2017:
  extends: .job-prepare
  stage: build
  tags: [ "windows" ]
  except:
    variables:
      - $DOCKER_UPDATE
      - $SKIP_WINDOWS
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
  script:
    #handling the case of previous job cancellation
    - IF EXIST build-desktop RMDIR /S /Q build-desktop
    - mkdir build-desktop
    - cd build-desktop
    #we launch the msvc-cl wrapper located in python scripts folder
    #this wrapper relays only needed calls to the real compiler
    #cache stats display
    - C:\PROGRA~1\Python37\Scripts\cl -s
    - echo %DEFAULT_CMAKE_OPTIONS%
    - echo %CMAKE_OPTIONS%
    - echo %CMAKE_ARCHITECTURE%
    - echo %SCHEDULE_CMAKE_OPTIONS%
    - cmake .. -G "Visual Studio 15 2017" -DLINPHONESDK_PLATFORM=Desktop -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=RelWithDebInfo %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS% %CMAKE_ARCHITECTURE% %SCHEDULE_CMAKE_OPTIONS%
    - cmake --build . --target sdk --config RelWithDebInfo -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - C:\PROGRA~1\Python37\Scripts\cl -s
################
  artifacts:
    paths:
      - build-desktop\linphone-sdk\desktop
      - build-desktop\linphone-sdk\desktop\share\doc\*
      - build-desktop\*.zip
    when: always
    expire_in: 1 week

.job-windows-vs2017-ninja:
  extends: .job-prepare
  stage: build
  tags: [ "windows" ]
  except:
    variables:
      - $DOCKER_UPDATE
      - $SKIP_WINDOWS
  variables:
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON
  script:
    #handling the case of previous job cancellation
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"
    - IF EXIST build-desktop RMDIR /S /Q build-desktop
    - mkdir build-desktop
    - cd build-desktop
    #we launch the msvc-cl wrapper located in python scripts folder
    #this wrapper relays only needed calls to the real compiler
    #cache stats display
    - C:\PROGRA~1\Python37\Scripts\cl -s
    - echo %DEFAULT_CMAKE_OPTIONS%
    - echo %CMAKE_OPTIONS%
    - echo %CMAKE_ARCHITECTURE%
    - echo %SCHEDULE_CMAKE_OPTIONS%
    - cmake .. -G "Ninja" -DLINPHONESDK_PLATFORM=Desktop -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_BUILD_PARALLEL_LEVEL=%MAKEFILE_JOBS% -DCMAKE_C_COMPILER=%CMAKE_C_COMPILER% -DCMAKE_CXX_COMPILER=%CMAKE_CXX_COMPILER% -DCMAKE_RC_COMPILER=%CMAKE_RC_COMPILER% %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS% %CMAKE_ARCHITECTURE% %SCHEDULE_CMAKE_OPTIONS%
    - echo Building with Ninja. See ninja_buildlog.txt to get details before completing the build.
    #Warning : Ninja doesn't return an error code on Linker error.
    #Store outputs in a file log
    - cmake --build . --target sdk --config RelWithDebInfo --parallel %MAKEFILE_JOBS% | find /V "inclusion du fichier" > ninja_buildlog.txt 2>&1
    #Print the file to get a feedback on CI
    - type ninja_buildlog.txt
    #GitlabCI stop at the first command that failed : Embedd commands in a script.
    #GitlabCI limitation : when having ': ', the whole line must be in ""
    - "echo FINDSTR /C:\"build stopped: subcommand failed\" ninja_buildlog.txt > invertSearch.bat"
    # Inverse the error code level of FINDSTR. It must be an error if the line has been found.
    - echo if ^%%ERRORLEVEL^%% EQU 0 (exit /b 1) else (exit /b 0) >> invertSearch.bat
    - invertSearch.bat
    - C:\PROGRA~1\Python37\Scripts\cl -s
################
  artifacts:
    paths:
      - build-desktop\*
    when: always
    expire_in: 1 week

.job-windows-vs2017-scheduled:
  extends: .job-windows-vs2017
  only:
    variables:
      - $NIGHTLY_MASTER
      - $NIGHTLY_RELEASE
      - $ENABLE_WINDOWS_TESTS
  before_script:
    #cache disabled on scheduled builds since we dot not need the fastest build
    - set "CLCACHE_DISABLE=1"


######################################################
# JOBS
######################################################

job-windows-vs2017-ninja-win32:
  extends: .job-windows-vs2017-ninja
  variables:
    CMAKE_C_COMPILER : cl.exe
    CMAKE_CXX_COMPILER : cl.exe
    CMAKE_RC_COMPILER : rc.exe

######################################################
# NIGHTLY
######################################################



##      ON SCHEDULE     ##
job-windows-vs2017-win32-scheduled:
  extends: .job-windows-vs2017-scheduled
  variables:
    CMAKE_ARCHITECTURE : -A Win32
    CMAKE_OPTIONS: -DENABLE_UNIT_TESTS=ON -DENABLE_FFMPEG=ON -DENABLE_OPENH264=ON -DENABLE_NON_FREE_CODECS=ON

job-windows-vs2017-win32-novideo:
  extends: job-windows-vs2017-win32-scheduled
  variables:
    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
#TODO : FACTORIZE TESTERS CODE

.test-linphone-windows-win32:
  stage: test
  extends: .job-prepare
  tags: [ "windows" ]
  allow_failure: true
  variables:
    #no need to fetch repo, all the needed files are in input artifacts
    GIT_SUBMODULE_STRATEGY: none

  script:
    - cd %CI_PROJECT_DIR%/build-desktop/linphone-sdk/desktop/bin

    #windows doesn't understand the meaning of the slash to launch an executable in basic command prompt
    - echo %CI_PROJECT_DIR%

    #When the dns host is set in command line, (--dns-hosts %CI_PROJECT_DIR%/linphone/tester/tester_hosts)
    #we have a weird bellesip error message
    #2019-04-30 11:28:17:372 belle-sip-error-hosts dns_hosts_loadfile(".../share/liblinphone_tester/C:/Users/Jenkins/linphone-sdk/linphone/tester/tester_hosts"): Unknown error

    #Procdumps generates a coredump if there is a crash
    # -ma : Write a dump file with all process memory. The default dump format only includes thread and handle information.

    # -e : Write a dump when the process encounters an unhandled exception. Include the 1 to create dump on first chance exceptions.
    # -x : Launch the specified image with optional arguments. If it is a Store Application or Package, ProcDump will start on the next activation (only).

    - procdump -ma -e -x . liblinphone_tester.exe --verbose --show-account-manager-logs --log-file logLiblinphoneAllParThIpv6.txt --xml-file BCUnitAutomated-win --resource-dir %CI_PROJECT_DIR%/liblinphone/tester

  after_script:
    - cd %CI_PROJECT_DIR%/build-desktop/linphone-sdk/desktop/bin

    # Coredump management

    # The coredumps pattern is liblinphone_tester.exe_*, so we search
    # all coredumps matching it and we execute the cdb debugger on it.
    # -c : startup commands
    # .lines : explicitely tells cdb to load file lines infos for backtrace
    # !analyze -v : execute the debugger, prints the backtrace and some info('!' needs to be escaped with '^' since this script is considered as a batch file)
    # k : display backtrace with line numbers
    # q : quits
    # -ee c++ : use c++ expression syntax instead of MASM
    # -i [exe] : path to executable
    # -y symbols path
    # -z coredump location
    # -netsyms yes : searches for system symbols on the web if they are not found locally. Not doing this randomly prevents from loading our symbols
    - echo %cd%
    - dir
    - dir /b liblinphone_tester.exe_*
    - for /F %%v in ('dir /b liblinphone_tester.exe_*') do echo %%v
    - for /F %%v in ('dir /b liblinphone_tester.exe_*') do cdb -c ".lines; ^!analyze -v; k; q" -ee c++ -i liblinphone_tester.exe -y .;C:\WinSymbols -z %%v -netsyms yes

    - echo %CI_PROJECT_DIR%
    - mkdir "%CI_PROJECT_DIR%/results"
    - dir
    - copy /B BCUnitAutomated* "%CI_PROJECT_DIR%/results"
    - copy /B logLiblinphoneAllParThIpv6* "%CI_PROJECT_DIR%/results"

  artifacts:
    paths:
      - results/*
    when: always
    reports:
      junit:
        - results/BCUnitAutomated-win-Results.xml
    expire_in: 4 week

test-linphone-windows-win32-msbuild:
  extends: .test-linphone-windows-win32
  only:
    variables:
      - $ENABLE_WINDOWS_TESTS
  needs:
    - job-windows-vs2017-win32-scheduled

test-linphone-windows-win32-ninja:
  extends: .test-linphone-windows-win32
  only:
    variables:
      - $ENABLE_WINDOWS_TESTS_WIN32_NINJA
      - $ENABLE_WINDOWS_TESTS
  needs:
    - job-windows-vs2017-ninja-win32
