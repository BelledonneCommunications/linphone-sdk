#################################################
# VS2015
#################################################
#Wedo not need vs2015 anymore

#job-windows-vs2015:
#
#  extends: .job-prepare
#  stage: build
#  tags: [ "windows" ]
#  except:
#    refs:
#      - feature/peioMergeCi
#
#  except:
#    variables:
#      - $DEPLOY_RUN_ANDROID
#      - $DEPLOY_RUN_IOS
#  variables:
#    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO
#
#  script:
#    - mkdir build-desktop
#    - cd build-desktop
#    - cmake .. -G "Visual Studio 14 2015" -DLINPHONESDK_PLATFORM=Desktop -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS%
#   - cmake --build . --target sdk --config Release -- /maxcpucount

#job-windows-vs2015-novideo:
#
#  only:
#    - schedules
#  except:
#    variables:
#      - $DEPLOY_RUN_ANDROID
#      - $FAST_LINUX_TESTS
#  variables:
#    CMAKE_OPTIONS: -DENABLE_VIDEO=NO
#  extends: job-windows-vs2015
.job-windows-vs2017:
  extends: .job-prepare
  stage: build
  tags: [ "windows" ]
  except:
    variables:
      - $DOCKER_UPDATE
      - $SKIP_WINDOWS
  variables:
    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO -DENABLE_UNIT_TESTS=ON
  script:
    #handling the case of previous job cancellation
    - IF EXIST build-desktop RMDIR /S /Q build-desktop
    - mkdir build-desktop
    - cd build-desktop
    #we launch the msvc-cl wrapper located in python scripts folder
    #this wrapper relays only needed calls to the real compiler
    #cache stats display
    - C:\PROGRA~1\Python37\Scripts\cl -s
    - echo %DEFAULT_CMAKE_OPTIONS%
    - echo %CMAKE_OPTIONS%
    - echo %CMAKE_ARCHITECTURE%
    - cmake .. -G "Visual Studio 15 2017" -DLINPHONESDK_PLATFORM=Desktop -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=Release %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS% %CMAKE_ARCHITECTURE% %SCHEDULE_CMAKE_OPTIONS%
    - cmake --build . --target sdk --config Release -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false
    - C:\PROGRA~1\Python37\Scripts\cl -s
################
  artifacts:
    paths:
      - build-desktop\linphone-sdk\desktop
      - build-desktop\*.zip
    when: always
    expire_in: 1 week
    
.job-windows-vs2017-ninja:
  extends: .job-prepare
  stage: build
  tags: [ "windows" ]
  except:
    variables:
      - $DOCKER_UPDATE
      - $SKIP_WINDOWS
  variables:
    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO -DENABLE_UNIT_TESTS=ON
  script:
    #handling the case of previous job cancellation
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"
    - IF EXIST build-desktop RMDIR /S /Q build-desktop
    - mkdir build-desktop
    - cd build-desktop
    #we launch the msvc-cl wrapper located in python scripts folder
    #this wrapper relays only needed calls to the real compiler
    #cache stats display
    - C:\PROGRA~1\Python37\Scripts\cl -s
    - echo %DEFAULT_CMAKE_OPTIONS%
    - echo %CMAKE_OPTIONS%
    - echo %CMAKE_ARCHITECTURE%
    - cmake .. -G "Ninja" -DLINPHONESDK_PLATFORM=Desktop -DENABLE_CSHARP_WRAPPER=YES -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_BUILD_PARALLEL_LEVEL=%MAKEFILE_JOBS% -DCMAKE_C_COMPILER=%CMAKE_C_COMPILER% -DCMAKE_CXX_COMPILER=%CMAKE_CXX_COMPILER% -DCMAKE_RC_COMPILER=%CMAKE_RC_COMPILER% %DEFAULT_CMAKE_OPTIONS% %CMAKE_OPTIONS% %CMAKE_ARCHITECTURE% %SCHEDULE_CMAKE_OPTIONS%
    - cmake --build . --target sdk --config RelWithDebInfo --parallel %MAKEFILE_JOBS% | find /V "inclusion du fichier"
    - C:\PROGRA~1\Python37\Scripts\cl -s
################
  artifacts:
    paths:
      - build-desktop\linphone-sdk\desktop
      - build-desktop\*.zip
    when: always
    expire_in: 1 week    

.job-windows-vs2017-scheduled:
  extends: .job-windows-vs2017
  only:
    variables:
      - $NIGHTLY_MASTER
      - $NIGHTLY_RELEASE
      - $PACKAGE_RUN_WINDOWS
      - $DEPLOY_RUN_WINDOWS
  before_script:
    #cache disabled on scheduled builds since we dot not need the fastest build
    - set "CLCACHE_DISABLE=1"


######################################################
# JOBS
######################################################

job-windows-vs2017-ninja-win32:
  extends: .job-windows-vs2017-ninja
  except:
    refs:
      - schedules
  variables:
    CMAKE_C_COMPILER : cl.exe
    CMAKE_CXX_COMPILER : cl.exe
    CMAKE_RC_COMPILER : rc.exe
    
######################################################
# NIGHTLY
######################################################   



##      ON SCHEDULE     ##
job-windows-vs2017-win32-scheduled:
  extends: .job-windows-vs2017-scheduled
  variables:
    CMAKE_ARCHITECTURE : -A Win32

job-windows-vs2017-win32-novideo:
  extends: job-windows-vs2017-win32-scheduled
  variables:
    CMAKE_OPTIONS: -DENABLE_LIME_X3DH=NO -DENABLE_VIDEO=NO
#TODO : FACTORIZE TESTERS CODE

test-linphone-windows-win32:
  stage: test
  extends: .job-prepare
  tags: [ "windows" ]
  allow_failure: true
  dependencies:
    - job-windows-vs2017-ninja-win32
    - job-windows-vs2017-win32-scheduled
  only:
    variables:
      - $ENABLE_WINDOWS_TESTS
  variables:
    #no need to fetch repo, all the needed files are in input artifacts
    GIT_SUBMODULE_STRATEGY: none

  script:
    - cd %CI_PROJECT_DIR%/build-desktop/linphone-sdk/desktop/bin

    #windows doesn't understand the meaning of the slash to launch an executable in basic command prompt
    - echo %CI_PROJECT_DIR%

    #When the dns host is set in command line, (--dns-hosts %CI_PROJECT_DIR%/linphone/tester/tester_hosts)
    #we have a weird bellesip error message
    #2019-04-30 11:28:17:372 belle-sip-error-hosts dns_hosts_loadfile(".../share/liblinphone_tester/C:/Users/Jenkins/linphone-sdk/linphone/tester/tester_hosts"): Unknown error

    - .\liblinphone_tester --verbose --show-account-manager-logs --log-file logLiblinphoneAllParThIpv6.txt --xml-file BCUnitAutomated.xml

  after_script:
    - cd %CI_PROJECT_DIR%/build-desktop/linphone-sdk/desktop/bin
    #TODO COREDUMPS MANAGEMENT
    - echo %CI_PROJECT_DIR%
    - mkdir "%CI_PROJECT_DIR%/results"
    - dir
    - echo %cd%
    - copy /B BCUnitAutomated* "%CI_PROJECT_DIR%/results"
    - copy /B logLiblinphoneAllParThIpv6* "%CI_PROJECT_DIR%/results"

  artifacts:
    paths:
      - results/*
    when: always
    expire_in: 4 week
