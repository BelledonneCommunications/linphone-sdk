#################################################
# Windows
#################################################

job-windows-vs2017-nuget-package:
  stage: package
  tags: [ "windows-powershell" ]
  needs:
    - job-windows-vs2017-win32store-scheduled
    - job-windows-vs2017-uwp-scheduled
    - job-windows-vs2017-win32-scheduled
  rules:
    - if: &dev_build $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - .gitlab-ci-files/job-packages.yml
        - cmake/NuGet/Windows/**/*
    - if: $DEPLOY_RUN_NUGET
    - if: $NIGHTLY_MASTER
    - if: $NIGHTLY_RELEASE
  script:
    - If ($MINGW_TYPE -eq "mingw64") {Import-BatchEnvironment "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"} Else {Import-BatchEnvironment "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"}
    - cd build-desktop

    #We are forced to do it in brackets because powershell displays an human readable object with useless line returns by default...
    - (Get-Location).path > chdir_sdk.temp
    - Set-Variable -Name "OUTPUT_SDK_BUILD" -Value ($(Get-Content chdir_sdk.temp))
    - Write-Output $OUTPUT_SDK_BUILD
    - Write-Output $DEFAULT_CMAKE_OPTIONS
    - Write-Output $CMAKE_OPTIONS
    - Write-Output $CMAKE_ARCHITECTURE
    - Write-Output $SCHEDULE_CMAKE_OPTIONS

    - echo $LastExitCode

    #We use Invoke-Expression to explain to powershell that we don't want it to touch to spaces in arguments
    - Invoke-Expression "& cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLINPHONESDK_PACKAGER=Nuget -DLINPHONESDK_DESKTOP_ZIP_PATH=$OUTPUT_SDK_BUILD/linphone-sdk/win32 -DLINPHONESDK_UWP_ZIP_PATH=$OUTPUT_SDK_BUILD/linphone-sdk/uwp -DLINPHONESDK_WINDOWSSTORE_ZIP_PATH=$OUTPUT_SDK_BUILD/linphone-sdk/win32store $DEFAULT_CMAKE_OPTIONS $CMAKE_OPTIONS $CMAKE_ARCHITECTURE $SCHEDULE_CMAKE_OPTIONS"

    - echo $LastExitCode
    - 'if (-not ($LastExitCode -eq 0)) {throw "Error: Configure failed"}'

    - cmake --build . --target ALL_BUILD --config RelWithDebInfo -- /maxcpucount /nodeReuse:true /p:TrackFileAccess=false

    - echo $LastExitCode
    - 'if (-not ($LastExitCode -eq 0)) {throw "Error: Build failed"}'
  artifacts:
    paths:
      - build-desktop/linphone-sdk/packages/*
    when: always
    expire_in: 1 week


#################################################
# Xamarin (Android & iOS)
#################################################

job-xamarin-package:
  stage: package
  tags: [ "macmini-m1-xcode12" ]
  variables:
    GIT_STRATEGY: fetch
  needs:
    - job-ios-xcode
    - job-android-makefile-r20-g729
  rules:
    - if: *dev_build
      changes:
        - .gitlab-ci-files/job-packages.yml
        - cmake/NuGet/Xamarin/**/*
    - if: $DEPLOY_RUN_NUGET
    - if: $NIGHTLY_RELEASE
    - if: $NIGHTLY_MASTER
      
  
  before_script:
    #removing previous results directory to avoid getting incorrect artifacts for current launch
    - if [ -d "$CI_PROJECT_DIR/results" ]; then rm -rf $CI_PROJECT_DIR/results; fi;
    - if [ -d "$CI_PROJECT_DIR/linphone-sdk-xamarin" ]; then rm -rf $CI_PROJECT_DIR/linphone-sdk-xamarin; fi; # unzipped iOS artifacts
    - if [ -d "$CI_PROJECT_DIR/build-nuget" ]; then rm -rf $CI_PROJECT_DIR/build-nuget; fi; # cmake build dir

  script:
    - unzip $CI_PROJECT_DIR/build-ios/linphone-sdk-ios-* -d linphone-sdk-xamarin
    - mkdir -p build-nuget
    - cd build-nuget
    # The C# wrapper is used both by Android and iOS but it's arbitrarily compiled in the iOS build (it has to come from somewhere)
    - cmake ..
      -DLINPHONESDK_PACKAGER="Nuget"
      -DLINPHONESDK_CSHARP_WRAPPER_PATH="$CI_PROJECT_DIR/linphone-sdk-xamarin/linphone-sdk/apple-darwin/share/linphonecs/LinphoneWrapper.cs"
      -DLINPHONESDK_IOS_FRAMEWORKS_PATH="$CI_PROJECT_DIR/linphone-sdk-xamarin/linphone-sdk/apple-darwin/Frameworks"
      -DLINPHONESDK_ANDROID_AAR_PATH="$CI_PROJECT_DIR/build/linphone-sdk/bin/outputs/aar/linphone-sdk-android-release.aar"
      -DCMAKE_INSTALL_PREFIX="$CI_PROJECT_DIR/results"
    - cmake --build .

  artifacts:
    paths:
      - results/*
    when: always
    expire_in: 1 week
