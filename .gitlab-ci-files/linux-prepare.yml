.no-cache:
  cache: []

.linux-prepare:

  cache:
    - key: $CI_JOB_IMAGE-master
      paths:
        - ccache/

  variables:
    #Misleading name, means no compression at all
    CACHE_COMPRESSION_LEVEL: "fastest"
    CCACHE_DIRECTORY_NAME: "ccache"
    FF_USE_FASTZIP: 1

    # Will work after the update to Gitlab 14
    FF_SCRIPT_SECTIONS: 1


  extends: .job-prepare

  rules:
    - if: $SKIP_LINUX
      when: never

  before_script:

    - echo $CI_JOB_IMAGE
    ##
    ## If a SSH_USER_KEY is defined then start ssh-agent and add the key
    ##
    - if ! [ -z ${SSH_USER_KEY+x} ]; then eval $(ssh-agent -s); fi
    - if ! [ -z ${SSH_USER_KEY+x} ]; then echo "$SSH_USER_KEY" | tr -d '\r' | ssh-add - > /dev/null; fi
    - if ! [ -z ${SSH_USER_KEY+x} ]; then mkdir -p ~/.ssh && chmod 700 ~/.ssh; fi
    ## TODO add host key to variables instead of blindly trusting the server
    - if ! [ -z ${SSH_USER_KEY+x} ]; then echo -e "Host gitlab.linphone.org\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config; fi
    - if ! [ -z ${SSH_USER_KEY+x} ]; then chmod 700 ~/.ssh/config; fi

    ##
    ## Then configure ccache
    ##
    - mkdir -p ccache
    - echo "max_size = $CCACHE_SIZE" > ccache/ccache.conf
    - echo $CCACHE_SIZE
    - echo ${PWD}/ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache
    - ccache -s --verbose || ccache -s

    # We clean the cache stats because it is our only way to see the cache stats per job run (one cleaner way would be to store in a file a do the delta by hand)
    - ccache -z
    - ccache -s --verbose || ccache -s

    ##
    ## Set max number of jobs
    ##
    - !reference [.set-max-jobs-unix, script]

    #Configure dev-toolset for centos-7

    - CENTOS_VERSION=$(cat /etc/centos-release) || true
    - if [ -n "$CENTOS_VERSION" ] && [ -n "$(echo $CENTOS_VERSION | grep -o 'release 7')" ]; then source /opt/rh/devtoolset-8/enable; fi
    - export GRADLE_USER_HOME=`pwd`/.gradle

    #debug empty value on updated arch
    - find $CI_PROJECT_DIR -name '.git' -exec bash -c 'git config --global --add safe.directory ${0%/.git}' {} \;
    - git describe --debug || true
    - git -C liblinphone describe --debug || true

  after_script:
    - if ! [ -z ${SSH_USER_KEY+x} ]; then rm -rf ~/.ssh || true; fi
    - export CCACHE_DIR=${PWD}/ccache
    - ccache -s --verbose || ccache -s
