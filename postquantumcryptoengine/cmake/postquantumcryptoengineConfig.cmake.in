############################################################################
# postquantumcryptoengineConfig.cmake
# Copyright (C) 2015  Belledonne Communications, Grenoble France
#
############################################################################
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
############################################################################
#
# Config file for the postquantumcryptoengine package.
# It defines the following variables:
#
#  postquantumcryptoengine_FOUND - system has postquantumcryptoengine
#  postquantumcryptoengine_INCLUDE_DIRS - the postquantumcryptoengine include directory
#  postquantumcryptoengine_LIBRARIES - The libraries needed to use postquantumcryptoengine
#  postquantumcryptoengine_CPPFLAGS - The compilation flags needed to use postquantumcryptoengine
#  postquantumcryptoengine_LDFLAGS - The linking flags needed to use postquantumcryptoengine


@PACKAGE_INIT@

set(postquantumcryptoengine_TARGETNAME postquantumcryptoengine)

include("${CMAKE_CURRENT_LIST_DIR}/${postquantumcryptoengine_TARGETNAME}Targets.cmake")

set(postquantumcryptoengine_CPPFLAGS @postquantumcryptoengine_CPPFLAGS@)
set(postquantumcryptoengine_LDFLAGS "@LINK_FLAGS_STR@")

if(@ENABLE_SHARED@)
	set(postquantumcryptoengine_LIBRARIES ${postquantumcryptoengine_TARGETNAME})
else()
	set(postquantumcryptoengine_TARGETNAME ${postquantumcryptoengine_TARGETNAME}-static)
	if(TARGET ${postquantumcryptoengine_TARGETNAME})
		get_target_property(postquantumcryptoengine_LIBRARIES ${postquantumcryptoengine_TARGETNAME} LOCATION)
		if(NOT postquantumcryptoengine_LIBRARIES)
			set(postquantumcryptoengine_LIBRARIES)
		endif()
		#	get_target_property(postquantumcryptoengine_LINK_LIBRARIES ${postquantumcryptoengine_TARGETNAME} INTERFACE_LINK_LIBRARIES)
		#if(postquantumcryptoengine_LINK_LIBRARIES)
			#list(APPEND postquantumcryptoengine_LIBRARIES ${postquantumcryptoengine_LINK_LIBRARIES})
			#endif()
	endif()
endif()

if(TARGET ${postquantumcryptoengine_TARGETNAME})
	get_target_property(postquantumcryptoengine_INCLUDE_DIRS ${postquantumcryptoengine_TARGETNAME} INTERFACE_INCLUDE_DIRECTORIES)
	if(NOT postquantumcryptoengine_INCLUDE_DIRS)
		set(postquantumcryptoengine_INCLUDE_DIRS)
	endif()
endif()

set(postquantumcryptoengine_FOUND 1)
